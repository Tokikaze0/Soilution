from django.contrib import admin
from django.urls import path, include
from detector import views
from django.conf import settings
from django.conf.urls.static import static
from django.views.generic import TemplateView

urlpatterns = [
    path('super_duper_admin/', admin.site.urls),
    path('accounts/', include('allauth.urls')),
    path('auth/', include('social_django.urls', namespace='social')),
    # path('messages/', include('messaging.urls')),
    path('', views.index, name='index'),
    path('about/', views.about, name='about'),
    path('services/', views.services, name='services'),
    path('support/', views.contact_support, name='contact_support'),
    path('workspace/dashboard/insights/', views.insights, name='insights'),
    path('workspace/dashboard/crop_details/', views.crop_details, name='crop_details'),
    path('workspace/dashboard/logs/', views.logs, name='logs'),
    path('workspace/dashboard/reports/', views.reports, name='reports'),
    path('workspace/dashboard_settings/', views.dashboard_settings, name='dashboard_settings'),
    path('workspace/dashboard/admin_insights/', views.admin_insights, name='admin_insights'),
    path('workspace/dashboard/admin_crop_details/', views.admin_crop_details, name='admin_crop_details'),
    path('workspace/dashboard/admin_logs/', views.admin_logs, name='admin_logs'),
    path('workspace/dashboard/admin_reports/', views.admin_reports, name='admin_reports'),
    path('workspace/admin_dashboard_settings/', views.admin_dashboard_settings, name='admin_dashboard_settings'),
    path('login/', views.login, name='login'),
    path('register/', views.register, name='register'),
    path('admin_register/', views.admin_register, name='admin_register'),
    path('admin_page/', views.admin_page, name='admin_page'),
    path('logout/', views.logoutView, name='logout'),
    path('confirm-email/<uidb64>/<token>/', views.confirm_email, name='confirm_email'),
    path('verification_email/', views.verification_email, name='verification_email'),
    path('workspace/dashboard/', views.dashboard, name='dashboard'),
    path('workspace/admin_dashboard/', views.admin_dashboard, name='admin_dashboard'),
    path('workspace/', views.workspace, name='workspace'),
    path('workspace_admin/', views.admin_workspace, name='admin_workspace'),
    path('add_workspace/', views.add_workspace, name='add_workspace'),
    # path('workspace/data/<int:id>/', views.workspace_data, name='workspace_data'),
    # path('profile/', views.profile, name='profile'),
    path('workspace/dashboard_settings/update/', views.update_workspace, name='update_workspace'),
    path('workspace/dashboard_settings/delete/', views.delete_workspace, name='delete_workspace'),
    path('workspace/dashboard_settings/<int:workspace_id>/', views.set_workspace, name='set_workspace'),
    path('workspace/account/settings/', views.update_account, name='account_settings'),
    path('update_account/', views.update_account, name='update_account'),
    path('forgot-password/', views.ForgotPassword, name='forgot-password'),
    path('password-reset-sent/<str:reset_id>/', views.PasswordResetSent, name='password-reset-sent'),
    path('reset-password/<str:reset_id>/', views.ResetPassword, name='reset-password'),
    path('messages/<int:message_id>/', views.view_message, name='view_message'),
    # path('ajax/unread-count/', views.get_unread_count, name='get_unread_count'),
    path('ajax/messages-status/', views.get_unread_count_and_messages, name='ajax_messages_status'),
    path('ajax/messages-status/', views.get_unread_conversations, name='get_unread_conversations'),
    path('messages/thread/<int:sender_id>/', views.load_conversation, name='load_conversation'),
    path('messages/thread/<int:user_id>/', views.message_thread, name='message_thread'),
    # path('messages/send/<int:user_id>/', views.send_message, name='send_message'),
    path('messages/send/<int:receiver_id>/', views.send_message, name='send_message'),
    path('messages/mark_read/<int:sender_id>/', views.mark_messages_as_read, name='mark_messages_read'),
    path('get_admin_users/', views.get_admin_users, name='get_admin_users'),
    path('dashboard/pending-accounts/', views.pending_accounts, name='pending_accounts'),
    path('dashboard/pending-accounts/data/', views.get_pending_accounts, name='get_pending_accounts'),
    # path('dashboard/pending-accounts/data/', views.pending_accounts_data, name='pending_accounts_data'),
    path('dashboard/approve/<int:user_id>/', views.approve_account, name='approve_account'),
    path('pending_approval/', views.pending_approval, name='pending_approval'), 
    # path('dashboard/pending-account-count/', views.pending_account_count, name='pending_account_count'),
    path('pending-accounts/', views.pending_users, name='pending_users'),
    path('users/create/', views.create_user, name='create_user'),
    path('users/<int:user_id>/view/', views.view_user, name='view_user'),
    path('users/<int:user_id>/delete/', views.delete_user, name='delete_user'),
    path('users/', views.user_list, name='user_list'),
    # path('users/<int:user_id>/deactivate/', views.deactivate_user, name='deactivate_user'),
    # path('users/<int:user_id>/activate/', views.activate_user, name='activate_user'),
    path('api/esp32-data/', views.esp32_data_api, name='esp32_data_api'),
    
    # New API endpoints for soil analysis and crop recommendations
    path('api/analyze-soil/', views.analyze_soil, name='analyze_soil'),
    path('api/crop-history/', views.get_crop_history, name='get_crop_history'),
    path('api/workspace-stats/', views.get_workspace_stats, name='get_workspace_stats'),
]

if settings.DEBUG:
    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)