# Generated by Django 5.1.6 on 2025-08-30 10:22

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('detector', '0008_message'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SoilAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nitrogen', models.FloatField(help_text='Nitrogen content in soil (kg/ha)')),
                ('phosphorus', models.FloatField(help_text='Phosphorus content in soil (kg/ha)')),
                ('potassium', models.FloatField(help_text='Potassium content in soil (kg/ha)')),
                ('temperature', models.FloatField(help_text='Temperature in Celsius')),
                ('humidity', models.FloatField(help_text='Humidity percentage')),
                ('ph', models.FloatField(help_text='pH value of soil')),
                ('rainfall', models.FloatField(help_text='Rainfall in mm')),
                ('analysis_date', models.DateTimeField(auto_now_add=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='soil_analyses', to=settings.AUTH_USER_MODEL)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='soil_analyses', to='detector.workspace')),
            ],
            options={
                'verbose_name_plural': 'Soil Analyses',
                'ordering': ['-analysis_date'],
            },
        ),
        migrations.CreateModel(
            name='CropRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommended_crop', models.CharField(max_length=100)),
                ('confidence_score', models.FloatField(help_text='ML model confidence score (0-1)')),
                ('alternative_crops', models.JSONField(default=list, help_text='List of alternative crop recommendations')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_implemented', models.BooleanField(default=False, help_text='Whether the recommendation was followed')),
                ('implementation_notes', models.TextField(blank=True, null=True)),
                ('soil_analysis', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='crop_recommendation', to='detector.soilanalysis')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CropHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop_name', models.CharField(max_length=100)),
                ('recommendation_date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crop_history', to=settings.AUTH_USER_MODEL)),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crop_history', to='detector.workspace')),
                ('soil_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crop_history', to='detector.soilanalysis')),
            ],
            options={
                'verbose_name_plural': 'Crop Histories',
                'ordering': ['-recommendation_date'],
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_type', models.CharField(choices=[('user_registration', 'User Registration'), ('user_activation', 'User Activation'), ('user_deactivation', 'User Deactivation'), ('crop_recommendation', 'Crop Recommendation'), ('soil_analysis', 'Soil Analysis'), ('admin_action', 'Admin Action'), ('system_error', 'System Error')], max_length=50)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('admin_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin_actions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='system_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
